@inherits Umbraco.Web.Mvc.UmbracoViewPage<EventCalendar.Models.EditDynamicFieldModel>
@using System.Web.Mvc.Html

<link type="text/css" href="@Url.Content("~/css/EventCalendar/bootstrap.css")" rel="stylesheet" />
<script type="text/javascript" src="@Url.Content("~/scripts/EventCalendar/jquery-1.9.1.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/scripts/EventCalendar/bootstrap.min.js")"></script>

<div class="container">
    <div class="row-fluid">
        <h1>Edit dynamic fields</h1>
    </div>
    <div class="row-fluid">
    @if (TempData["StatusCreateProperty"] == "Invalid")
    {
        <div class="alert alert-error">
            Property couldn't be saved due to errors!
            <a class="close" data-dismiss="alert" href="#">&times;</a>
        </div>
    }
    @if (TempData["StatusCreateProperty"] == "Valid")
    {
        <div class="alert alert-success">
            Property saved!
            <a class="close" data-dismiss="alert" href="#">&times;</a>
        </div>
    }
    </div>

    <ul class="nav nav-tabs">
        <li><a href="#create" data-toggle="tab">Create new</a></li>
        <li><a href="#list" data-toggle="tab">View</a></li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane active" id="create">
            <form action="~/umbraco/EventCalendar/ECBackendSurface/DynamicPropertiesEvents" enctype="multipart/form-data" method="post" class="form-horizontal">
                <fieldset>
                    <legend>Create new property</legend>
                    @Html.HiddenFor(x => x.SelectedType)
                    @Html.HiddenFor(x => x.Id)
                    <div class="control-group">
                        @Html.LabelFor(x => x.Name, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(x => x.Name)
                        </div>
                        @Html.ValidationMessageFor(x => x.Name)
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(x => x.ValueTypes, new { @class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(x => x.SelectedValueType, Model.ValueTypes)
                        </div>
                    </div>
                    <div class="control-group">
                        <div class="controls">
                            <input type="submit" value="Save" class="btn btn-primary">
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
        <div class="tab-pane" id="list">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var property in Model.Fields)
                    {
                        <tr>
                            <td>@property.Name</td>
                            <td>@((EventCalendar.Models.DynamicPropertyValueType)property.ValueType)</td>
                            <td>
                                @Html.ActionLink("Edit", "DynamicPropertiesEvents", "ECBackendSurface", new { id = property.Id }, null)
                                ||
                                @Html.ActionLink("Delete", "DeleteDynamicProperty", "ECBackendSurface", new { id = property.Id }, null)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>